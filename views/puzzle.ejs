<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Movie Jigsaw Puzzle</title>

<style type="text/css">
*{margin:0;padding:0;}
input{margin:10px;}
img{border:none;height:100%;width:100%}
div.container{width:600px;height:600px;margin:0 auto;position:relative;}
.container .active{border:1px solid #00f;width:148px;height:148px;}
.thumb{position:absolute;left:-230px;top:0px;width:200px;height:200px;}
</style>

</head>
<body>

<div align="left">
<form action="/profile" method="post">
        <input type="hidden"  id='history' name="history" value='' >
        <button type="submit" class="btn btn-warning btn-lg">Return</button>
    </form>
</div>



<center><input type='button'  value='START' id='start'/></center>
<center><div>Score: <span id="score">0</span></div></center>
<center><div>Time: <span id="time">60</span></div></center>

<div class="container" id='container'><img class="thumb" src='<%= poster_url %>'/></div>

<script type="text/javascript">
var PGame = { 
	time : 61, 
	nowScore : 0, 
	changeScore : function(score){ 
		this.nowScore += score; 
		document.getElementById('score').innerHTML = this.nowScore; 
	},
	startTime : function(){ 
		this.time -= 1; 
		var _this = this; 
		document.getElementById('time').innerHTML = this.time; 
		if(this.time > 0){ 
			setTimeout(function(){_this.startTime()},1000); 
		} 
	},
	reset : function(){ 
		this.time = 61;  
		this.nowScore = 0; 
		this.changeScore(0); 
	} 
}

function Game(row,col){
   this.con=document.getElementById('container');
   this.item=[];
   this.conwidth=563;
   this.conheight=768;
   this.row=row||3;
   this.col=col||3;
   this.minwidth=this.conwidth/this.col;
   this.minheight=this.conheight/this.row;
   this.num=this.row*this.col;
   this.arr=[];
   this.newarr=[];//Random Pieces
   this.pos=[];//Location
   this.init();
	   this.len=this.arr.length;
   this.minIndex=10; 	
};
Game.prototype.init=function(){
	  for(var i=1;i<=this.num;i++){
		 this.arr.push(i);
	  };
	  this.newarr=this.arr.slice(0);
	  var oFrag=document.createDocumentFragment();
	  for(var i=0;i<this.num;i++){
		 var div=document.createElement('div');  
		 div.style.cssText='cursor:move;background:url(<%= poster_url %>) no-repeat -'+(i%this.col)*this.minwidth+'px -'+Math.floor((i)/this.col)*this.minheight+'px;background-size: 563px 768px;float:left;height:'+this.minheight+'px;width:'+this.minwidth+'px;';
		 this.item.push(div);
		 oFrag.appendChild(div);
	  };
	  this.con.appendChild(oFrag);
};
Game.prototype.isSuccess=function(){
   for(var i=0;i<this.len-1;i++){
	  if(this.newarr[i]!=this.arr[i])
	  { 
		 return false;
	  }
   };
   return true;
};

Game.prototype.startGame=function(){
/*
  var history = 'Puzzle';
  history += ',';
  history += getTime(new Date());
  history += ',';
  history += '0';
  document.getElementById('history').value = history;
  */
	//Yang
	if(PGame.time > 0 && PGame.time != 61){ 
		alert("Cannot restart when you have not finished!"); 
	return; 
	}
	else if(PGame.time < 0){
		window.location.reload();
	}
	else{ 
	PGame.reset(); 
	PGame.startTime(); 
	}
	//Yang
   this.newarr.sort(function(a,b){
	  return Math.random() > 0.5 ? 1 :-1;
   });
   for(var i=0;i<this.len;i++){

	   this.pos[i]=[this.item[i].offsetLeft,this.item[i].offsetTop];
   };
   for(var i=0;i<this.len;i++){
	  var n=this.newarr[i]-1;
	  this.item[i].style.left=this.pos[i][0]+'px';
	  this.item[i].style.top=this.pos[i][1]+'px';
	  this.item[i].style.backgroundPosition='-'+(n % this.col)*this.minwidth+'px -'+Math.floor((n)/this.col)*this.minheight+'px';
	  this.item[i].style.position='absolute';
	  this.item[i].index=i;
	  this.drag(this.item[i]);
   }
}
Game.prototype.drag=function(o){
  var self=this,near=null;
  o.onmousedown=function(e){
	  var ev=window.event||e,
		  disX=ev.clientX-o.offsetLeft,
		  disY=ev.clientY-o.offsetTop;
		  o.style.zIndex=self.minIndex++;
		  document.onmousemove=function(e){
			  var ev=window.event||e,
			  l=ev.clientX-disX,
			  t=ev.clientY-disY;
			  
			  near=self.findNear(o);
			  if(near){
				  near.className='active';
			  }
			  o.style.left=l+'px';
			  o.style.top=t+'px';
		  };
		  document.onmouseup=function(){
			  if(near){
				 near.className='';
				 self.move(o,{left:self.pos[near.index][0],top:self.pos[near.index][1]});
				 self.move(near,{left:self.pos[o.index][0],top:self.pos[o.index][1]});

				 var temp=0;
				 temp=near.index;
				 near.index=o.index;
				 o.index=temp;

				 for(var i=0;i<self.len;i++){
					  self.arr[i]=(self.item[i].index+1);
				 }

				 if(self.isSuccess()){
					self.tips()
					
			   }

			  }else{
				 self.move(o,{left:self.pos[o.index][0],top:self.pos[o.index][1]})
			  }
			  console.log(self.arr);
			
			  o.releaseCapture && o.releaseCapture();
			  document.onmousemove=null;
			  document.onmouseup=null;
			  return false;
		  }
		  this.setCapture && this.setCapture();
		  ev.preventDefault && ev.preventDefault();
  }
};
Game.prototype.move=function(o,json,fn){
   o.timer && clearInterval(o.timer);
   o.timer=setInterval(function(){
	   var bStop=true;
	   for(var i in json){
		   var iCur=css(o,i);
		   var iSpeed=(json[i]-iCur)/5;iSpeed=iSpeed>0 ? Math.ceil(iSpeed) : Math.floor(iSpeed);
		   if(json[i]!=iCur){
			  bStop=false;
		   };
			o.style[i]=(iCur+iSpeed)+'px';
		  
	   };

		 if(bStop){
			  clearInterval(o.timer);
			  typeof fn=='function' && fn();
		   };

   },10);

   function css(o,attr){
	  return o.currentStyle ? parseFloat(o.currentStyle[attr]) : parseFloat(getComputedStyle(o,false)[attr]);
   }

};
Game.prototype.tips=function(ts){
 var suc=document.createElement('div');
 var t=document.createElement('p');
 var tn=ts||3;
 var timer=null;
 suc.style.cssText='position:absolute;z-index:9999999;top:45%;width:100%;text-align:center;font-size:60px;color:#F56200;font-family:arial,黑体;';
 suc.innerHTML='Congratulations!';
 suc.appendChild(t);
 this.con.appendChild(suc);
 function updatetime(){
	t.innerHTML=tn--;
	if(tn<=0){
		clearInterval(timer);
		window.location.reload();
		return;
	}
	timer=setTimeout(function(){
		updatetime();
	},1000)
 }
 //updatetime();
 PGame.changeScore(PGame.time*10);
  PGame.time = 0;
  
  var history2 = 'Puzzle';
  history2 += ',';
  history2 += getTime(new Date());
  history2 += ',';
  history2 += PGame.nowScore.toString();
  document.getElementById('history').value = history2;
  
 //Yang
};
Game.prototype.checkPZ=function(o1,o2){
   if(o1==o2)return;
   var l1=o1.offsetLeft,t1=o1.offsetTop,r1=o1.offsetWidth+l1,b1=o1.offsetHeight+t1;
   var l2=o2.offsetLeft,t2=o2.offsetTop,r2=o2.offsetWidth+l2,b2=o2.offsetHeight+t2;
   if(l1>r2 || t1>b2 || r1<l2 || b1<t2){
	  return false;
   }
   else
   {
	  return true;
   }
};
Game.prototype.findNear=function(o){
   var iMin=99999,index=-1;
   for(var i=0;i<this.len;i++){
	   this.item[i].className='';
	   if(this.checkPZ(o,this.item[i])){
			var l=dis(o,this.item[i]);
			if(iMin>l)
			{
				 iMin=l;
				 index=i;
			};
	   }
   };
   if(index==-1){
	  return null;
   }
   else
   {
	 return this.item[index];
   };
   function dis(o1,o2){
	  var c1=o1.offsetLeft-o2.offsetLeft,c2=o1.offsetTop-o2.offsetTop;
	  return Math.sqrt(c1*c1+c2*c2);
   }
};
var  t=new Game(5,3);//row, column
document.getElementById('start').onclick=function(){
  //alert(getTime(new Date()));
  t.startGame();
}

function getTime(date)
{
    if(date == null)
    {
        date = new Date();
    }
    var y = date.getFullYear();
    var M = date.getMonth() + 1;
    var d = date.getDate();
    var h = date.getHours();
    var m = date.getMinutes();
    var s = date.getSeconds();
    var S = date.getTime()%1000;
    var html = y + "-";
    if(M < 10)
    {
        html += "0";
    }
    html += M + "-";
 
    if(d < 10)
    {
        html += "0";
    }
    html += d + " ";
    if(h < 10)
    {
        html += "0";
    }
    html += h + ":";
    if(m < 10)
    {
        html += "0";
    }
    html += m + ":";
    if(s < 10)
    {
        html += "0";
    }
    html += s;
    /*
    html += " ";
    if(S < 100)
    {
        html += "0"
    }
    if(S < 10)
    {
        html += "0";
    }
    html += S;
    */
    return html;
}

</script>

</body>
</html>